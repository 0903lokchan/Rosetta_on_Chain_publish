{"version":3,"sources":["components/NavBar/NavBar.module.css","components/WarningMessage/WarningMessage.module.css","components/Footer/Footer.module.css","components/NavBar/NavBar.js","components/Footer/Footer.js","components/Landing/Landing.js","components/Home/ListItem.js","components/Home/Form.js","components/WarningMessage/WarningMessage.js","constants.js","components/Home/Home.js","components/Profile/ListItem.js","components/Profile/Profile.js","components/GetStarted/Detail.js","components/GetStarted/MasterList.js","components/GetStarted/Detail/Wallet.js","components/GetStarted/Detail/MainFunc.js","components/GetStarted/Detail/CreatePosts.js","components/GetStarted/GetStarted.js","App.js","registerServiceWorker.js","index.js","components/GetStarted/styles.module.css"],"names":["module","exports","NavBar","Fragment","className","styles","skipLink","href","to","role","aria-level","Footer","footer","title","description","footerlink","Landing","id","class","ListItem","props","author","unix","timestamp","fromNow","content","Form","params","useState","textField","setTextField","onSubmit","e","preventDefault","createPost","type","onChange","target","value","name","placeholder","aria-label","WarningMessage","open","text","onWarningClose","classnames","warningPosition","onClick","aria-hidden","ERROR_MESSAGE","Home","datakey","setDatakey","posts","setPosts","React","useEffect","drizzle","drizzleState","contracts","Postwall","methods","getPosts","cacheCall","data","rawPosts","i","length","unshift","fetchPosts","console","log","warningMessageOpen","warningMessageText","warningMessage","setWarningMessage","contract","cacheSend","map","listItem","key","Profile","uid","match","web3","givenProvider","selectedAddress","toUpperCase","Detail","section","heading","createElement","MasterList","selectSection","isActive","sidebarText","Wallet","MainFunc","CreatePosts","GetStarted","sections","currentSection","setCurrentSection","sidebarStyle","sidebar","App","state","loading","this","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","setState","exact","path","component","render","Component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","drizzleOptions","Drizzle","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0eaed086.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"skipLink\":\"NavBar_skipLink__3aBmu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warningPosition\":\"WarningMessage_warningPosition__2vd6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1A2pI\",\"title\":\"Footer_title__2CFV9\",\"description\":\"Footer_description__2GZhG\",\"footerlink\":\"Footer_footerlink__2eamX\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./NavBar.module.css\";\r\n\r\n//TODO Web Template Studio: Add a new link in the NavBar for your page here.\r\n// A skip link is included as an accessibility best practice. For more information visit https://www.w3.org/WAI/WCAG21/Techniques/general/G1.\r\nconst NavBar = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.skipLink}>\r\n        <a href=\"#mainContent\">Skip to Main Content</a>\r\n      </div>\r\n      <nav className=\"navbar navbar-expand-sm navbar-light border-bottom justify-content-between\">\r\n        <Link className=\"navbar-brand\" to=\"/\" role=\"heading\" aria-level=\"1\">\r\n          Rosetta_on_Chain\r\n        </Link>\r\n        <div className=\"navbar-nav\">\r\n          <Link className=\"nav-item nav-link active\" to=\"Home\">\r\n            Home\r\n          </Link>\r\n          <Link className=\"nav-item nav-link active\" to=\"Profile\">\r\n            Profile\r\n          </Link>\r\n          <Link className=\"nav-item nav-link active\" to=\"GetStarted\">\r\n            Get Started\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport styles from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row justify-content-around\">\r\n          <div className=\"col-8 col-md-5\">\r\n            <h5 className={styles.title}>Rosetta_on_Chain</h5>\r\n            <p className={styles.description}>\r\n              This is placeholder text. Your web app description goes here.\r\n            </p>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/\">\r\n                  Example Link\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/\">\r\n                  Example Link\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/\">\r\n                  Example Link\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;","import React from \"react\";\r\n\r\nconst Landing = () => {\r\n  return <main id=\"mainContent\">\r\n        <div class=\"container w-80\">\r\n        <article id=\"intro\" class=\"\">\r\n            <div class=\"card my-4\">\r\n                <div class=\"card-header\">\r\n                    <h1>Rosetta on Chain</h1>\r\n                </div>\r\n                <div class=\"card-body text-center mb-4\">\r\n                    <p class=\"card-text\">\r\n                        Throughout human history, people try to make long-lasting records of important messages: knots, \r\n                        engravings, books, disks. Leaving messages for the future is a core value of humanity, yet none \r\n                        of the attempts succeeds.\r\n                    </p>\r\n                    <p class=\"card-text\">\r\n                        Blockchain is a breakthrough in human recording technologies. With the aid of it, a new way to \r\n                        store critical information is found. Rosetta on Chain is an interface built on top of a set of \r\n                        algorithms residing on a public blockchain, that saves messages of yours on a publicly owned \r\n                        domain. This makes the data you upload to be imperishable... as long as the Internet stands.        \r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"card mb-4\">\r\n                <div class=\"card-header\">\r\n                    <h2>How does it work?</h2>\r\n                </div>\r\n                <div class=\"card-body text-center mb-4\">\r\n                    <p class=\"card-text\">\r\n                        Rosetta on Chain is a prototype of a new form of data storage. It is not only a web application. \r\n                        It interacts with a publicly owned set of algorithms on a blockchain that does no more than \r\n                        storing and serving data its users upload. It ensures that all the messages from the users are \r\n                        kept original and untouched.\r\n                  </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"card mb-4\">\r\n                <div class=\"card-header\">\r\n                    <h2>What Blockchain really is? How does it help?</h2>\r\n                </div>\r\n                <div class=\"card-body text-center\">\r\n                    <p class=\"card-text\">\r\n                        Blockchain is a kind of computer networks that collaborates in as swarm intelligence. That means \r\n                        every worker in the network plays an equal role and there is no centre of the network. In the use \r\n                        of data storage, it means that the data stored on it is securely distributed. Every bit of data \r\n                        will remain permanent and immutable as long as the blockchain survives.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"card mb-4\">\r\n                <div class=\"card-header\">\r\n                    <h2>What purpose is this of?</h2>\r\n                </div>\r\n                <div class=\"card-body p-2\">\r\n                    <p class=\"card-text\">\r\n                        Rosetta on Chain is a perfect solution for leaving important messages to the public, as your \r\n                        announcements will not be altered, censored or perished. Rosetta on Chain also ensures wide reach \r\n                        of your messages since it in default broadcasts every post to every user. The toll fee nature of \r\n                        blockchain systems also encourages users on Rosetta on Chain to put important messages on the \r\n                        blockchain, so you will not be flooded by insignificant daily posts.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    </div>\r\n  </main>;\r\n}\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {unix, fromNow} from \"moment\"\r\n\r\nconst ListItem = (props) => {\r\n  if (props){\r\n    return (\r\n      <div className=\"col-12 mb-3 border\">\r\n        <div className=\"row\">\r\n          <div className=\"col-11\">\r\n            <a id=\"postUsername\" href={\"/Profile/\"+props.author}>{props.author}</a>\r\n            <p id=\"postTimestamp\">said {unix(props.timestamp).fromNow()} ago:</p>\r\n            <br></br>\r\n            <p className=\"mt-3\">{props.content}</p>\r\n          </div>\r\n          <div className=\"col-1\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nListItem.propTypes = {\r\n  props: PropTypes.any,\r\n}\r\n\r\nexport default ListItem;","import React, { useState } from 'react';\r\n\r\nconst Form = (params) =>{\r\n  const [textField, setTextField] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setTextField(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    params.createPost(textField);\r\n    setTextField(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"input-group my-3\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n        value={textField}\r\n        name=\"textField\"\r\n        className=\"form-control\"\r\n        placeholder=\"Add text here...\"\r\n        aria-label=\"Add text here...\"\r\n      />\r\n      <button type=\"submit\" className=\"btn btn-primary ml-2\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport styles from \"./WarningMessage.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// A pop up message used to warn users about failed API calls to the back end\r\nconst WarningMessage = ({ open, text, onWarningClose }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {open && (\r\n        <div\r\n          className={classnames(\r\n            \"alert\",\r\n            \"alert-warning\",\r\n            \"ml-3\",\r\n            styles.warningPosition\r\n          )}\r\n          role=\"alert\"\r\n        >\r\n          {text}\r\n          <button\r\n            onClick={onWarningClose}\r\n            className=\"close ml-2\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nWarningMessage.propTypes = {\r\n  open: PropTypes.bool,\r\n  text: PropTypes.string,\r\n  onWarningClose:PropTypes.func\r\n}\r\n\r\nexport default WarningMessage;","const ENDPOINT = {\r\n  MASTERDETAIL: \"/api/masterdetail\",\r\n  LIST: \"/api/list\",\r\n};\r\n\r\nconst ERROR_MESSAGE = {\r\n  MASTERDETAIL_GET: \"Request to get master detail text failed:\",\r\n  LIST_DELETE: \"Request to delete list item failed:\",\r\n  LIST_ADD: \"Request to add list item failed:\",\r\n  LIST_GET: \"Request to get list items failed:\",\r\n  LIST_EMPTY_MESSAGE: \"Please enter a valid message\",\r\n};\r\n\r\nexport {ENDPOINT, ERROR_MESSAGE};\r\n","import React, { useState } from \"react\";\r\n\r\nimport ListItem from \"./ListItem\";\r\nimport Form from \"./Form\";\r\nimport WarningMessage from \"../WarningMessage/WarningMessage\";\r\nimport { ERROR_MESSAGE, ENDPOINT } from \"../../constants\";\r\n\r\nconst Home = (props) => {\r\n\r\n  // create posts\r\n  const createPost = (content) => {\r\n    const { drizzle, drizzleState } = props;\r\n    const contract = drizzle.contracts.Postwall;\r\n\r\n    // Warning Pop Up if the user submits an empty message\r\n    if (!content) {\r\n      setWarningMessage({\r\n        warningMessageOpen: true,\r\n        warningMessageText: ERROR_MESSAGE.LIST_EMPTY_MESSAGE\r\n      });\r\n      return;\r\n    }\r\n\r\n    contract.methods.createPost.cacheSend(content)\r\n  }\r\n\r\n  // get and display posts\r\n  const [datakey, setDatakey] = useState(null);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const fetchPosts = () => {\r\n    const PostwallStore = props.drizzleState.contracts.Postwall;\r\n    const data = PostwallStore.getPosts[datakey];\r\n    if (!data) {\r\n      return\r\n    }\r\n    const rawPosts = data.value;\r\n\r\n    // comprehend raw posts data from contract\r\n    let posts = [];\r\n    for (let i = 0; i < rawPosts[0].length; i++) {\r\n      posts.unshift(\r\n        {\"id\": rawPosts[0][i],\r\n        \"timestamp\": rawPosts[1][i],\r\n        \"author\": rawPosts[2][i],\r\n        \"content\": rawPosts[3][i]\r\n        }\r\n      );\r\n      }\r\n\r\n    setPosts(posts);\r\n    return\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const { drizzle, drizzleState } = props;\r\n    const contract = drizzle.contracts.Postwall;\r\n    const datakey = contract.methods.getPosts.cacheCall();\r\n    setDatakey(datakey);\r\n    return\r\n  },[props]);\r\n\r\n  React.useEffect(() => {\r\n    fetchPosts()\r\n    console.log(posts);\r\n    return\r\n  }, [props]);\r\n\r\n  // warning messages\r\n  const [warningMessage, setWarningMessage] = useState({warningMessageOpen: false, warningMessageText: \"\"});\r\n  const closeWarningMessage = () => {\r\n    setWarningMessage({\r\n      warningMessageOpen: false,\r\n      warningMessageText: \"\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main id=\"mainContent\" className=\"container\">\r\n      <div className=\"row justify-content-center py-5\">\r\n        <h3>Homepage</h3>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 p-0\">\r\n          <Form createPost={createPost}/>\r\n        </div>\r\n          {posts.map(listItem => (\r\n            <ListItem\r\n              key={\"post\" + listItem.id}\r\n              timestamp={listItem.timestamp}\r\n              author={listItem.author}\r\n              content={listItem.content}\r\n            />\r\n          ))}\r\n          <WarningMessage\r\n          open={warningMessage.warningMessageOpen}\r\n          text={warningMessage.warningMessageText}\r\n          onWarningClose={closeWarningMessage}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {unix, fromNow} from \"moment\"\r\n\r\nconst ListItem = (props) => {\r\n  if (props){\r\n    return (\r\n      <div className=\"col-12 mb-3 border\">\r\n        <div className=\"row\">\r\n          <div className=\"col-11\">\r\n            <a id=\"postUsername\" href={\"/Profile/\"+props.author}>{props.author}</a>\r\n            <p id=\"postTimestamp\">said {unix(props.timestamp).fromNow()} ago:</p>\r\n            <br></br>\r\n            <p className=\"mt-3\">{props.content}</p>\r\n          </div>\r\n          <div className=\"col-1\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nListItem.propTypes = {\r\n  props: PropTypes.any,\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport ListItem from './ListItem';\r\n\r\nconst Profile = (props) => {\r\n\tconst uid = props.match.params.uid? props.match.params.uid: props.drizzle.web3.givenProvider.selectedAddress;\r\n\tconst [ posts, setPosts ] = React.useState([]);\r\n\tconst [ datakey, setDatakey ] = React.useState(null);\r\n\r\n\tconst toggleFollow = (targetAddress) => {\r\n\t\t// handle follow/unfollow function\r\n\t\t\t// try {\r\n\t\t\t// \tconst follower = App.web3Provider.selectedAddress;\r\n\t\t\t// \tconst followingsArray = [...await App.contracts.postwall.getFollowings(follower)];\r\n\t\t\t// \tconst followersArray = [...await App.contracts.postwall.getFollowers(targetAddress)];\r\n\t\r\n\t\t\t// \t// manipulate following/followed array\r\n\t\t\t// \tconst indexFollowee = followingsArray.indexOf(targetAddress);\r\n\t\t\t// \tif (indexFollowee != -1) {\r\n\t\t\t// \t\tfollowingsArray.splice(indexFollowee, 1);\r\n\t\t\t// \t} else {\r\n\t\t\t// \t\tfollowingsArray.push(targetAddress);\r\n\t\t\t// \t}\r\n\t\t\t\t\r\n\t\t\t// \tconst indexFollower = followersArray.indexOf(follower);\r\n\t\t\t// \tif (indexFollower != -1) {\r\n\t\t\t// \t\tfollowersArray.splice(indexFollower)\r\n\t\t\t// \t} else {\r\n\t\t\t// \t\tfollowersArray.push(follower);\r\n\t\t\t// \t}\r\n\t\r\n\t\t\t// \t// upload updated arrays onto smartcontract\r\n\t\t\t// \tawait App.contracts.postwall.updateFollowings(followingsArray, targetAddress, followersArray, {from: follower});\r\n\t\r\n\t\t\t// } catch (error) {\r\n\t\t\t// \tconsole.log(\"Unable to fetch user following/followed detail\");\r\n\t\t\t// \tconsole.log(error);\r\n\t\t\t// }\r\n\t\treturn\r\n\t\t}\r\n\r\n\tconst fetchPosts = () => {\r\n\t\tconst PostwallStore = props.drizzleState.contracts.Postwall;\r\n\t\tconst data = PostwallStore.getPosts[datakey];\r\n\t\tif (!data) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst rawPosts = data.value;\r\n\r\n\t\t// comprehend raw posts data from contract\r\n\t\tlet posts = [];\r\n\t\tfor (let i = 0; i < rawPosts[0].length; i++) {\r\n\t\t\tif (rawPosts[2][i].toUpperCase() === uid.toUpperCase()) {\r\n\t\t\t\tposts.unshift({\r\n\t\t\t\t\tid: rawPosts[0][i],\r\n\t\t\t\t\ttimestamp: rawPosts[1][i],\r\n\t\t\t\t\tauthor: rawPosts[2][i],\r\n\t\t\t\t\tcontent: rawPosts[3][i]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetPosts(posts);\r\n\t\treturn;\r\n\t};\r\n\r\n\tReact.useEffect(\r\n\t\t() => {\r\n\t\t\tconst { drizzle, drizzleState } = props;\r\n\t\t\tconst contract = drizzle.contracts.Postwall;\r\n\t\t\tconst datakey = contract.methods.getPosts.cacheCall();\r\n\t\t\tsetDatakey(datakey);\r\n\t\t\tfetchPosts();\r\n\t\t\treturn;\r\n\t\t},\r\n\t\t[ props ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<main id=\"mainContent\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row justify-content-center mt-5 p-0\">\r\n\t\t\t\t\t<h5>User {uid}</h5>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h4>Recent Posts</h4>\r\n\t\t\t\t\t{posts.map((listItem) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={'post' + listItem.id}\r\n\t\t\t\t\t\t\ttimestamp={listItem.timestamp}\r\n\t\t\t\t\t\t\tauthor={listItem.author}\r\n\t\t\t\t\t\t\tcontent={listItem.content}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\nexport default Profile;\r\n","import React, { createElement } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport styles from \"./styles.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Detail = ({ section }) => {\r\n  const {\r\n    id,\r\n    title,\r\n    content\r\n  } = section;\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      <div className={classnames(\"row\", styles.heading)}>\r\n        <h3 className=\"ml-3 mb-4\">{title}</h3>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10 col-12 ml-3 mb-5 mt-3\">\r\n          {createElement(content)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nDetail.propTypes = {\r\n  section: PropTypes.any\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport styles from \"./styles.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MasterList = ({ section, selectSection, isActive }) => {\r\n  return (\r\n    <button\r\n      onClick={() => selectSection(section)}\r\n      type=\"button\"\r\n      className={classnames(\r\n        \"list-group-item\",\r\n        \"list-group-item-action\",\r\n        styles.sidebarText,\r\n        { \"active\": isActive }\r\n      )}\r\n    >\r\n      {section.title}\r\n    </button>\r\n  );\r\n}\r\n\r\nMasterList.propTypes = {\r\n  section: PropTypes.any,\r\n  selectSection: PropTypes.func,\r\n  isActive: PropTypes.bool\r\n}\r\n\r\nexport default MasterList;","import React from \"react\"\r\n\r\nconst Wallet = () => {\r\n    return (\r\n        <div>\r\n            <p>\r\n                To start using Rosetta on Chain, you need to log into a Blockchain network with a \r\n                        Blockchain wallet app. At the moment, the app only works on Ropsten testnet. For \r\n                        wallet applications, we recommend using Metamask for stable performance as it is \r\n                        used in our development processes.\r\n            </p>\r\n            <div class=\"card my-4\">\r\n                <div class=\"card-header text-left\">\r\n                    <h2>Metamask</h2>\r\n                </div>\r\n                <div class=\"card-body text-justify\">\r\n                    <div class=\"card-text\">\r\n                        <p>\r\n                            Metamask is a blockchain wallet app that stores and manages your blockchain accounts, \r\n                            and secures your accounts by passing your account details to blockchain apps without \r\n                            giving out your credentials. For more information about Metamask, please visit \r\n                            their <a href=\"https://metamask.io/\">official site</a>.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card my-4\">\r\n                <div class=\"card-header text-left\">\r\n                    <h2>Setting up Metamask</h2>\r\n                </div>\r\n                <div class=\"card-body text-justify\">\r\n                    <div class=\"card-text\">\r\n                        <p>\r\n                            To use Metamask you need to install it on your browser. Installation instructions are \r\n                            accessible <a href=\"https://metamask.io/download.html\">here</a>. If you don't have an \r\n                            account yet, create a blockchain account \r\n                            following <a href=\"https://metamask.zendesk.com/hc/en-us/articles/360015289452-How-to-Create-Additional-MetaMask-Wallets\">\r\n                            these instructions</a>. If you have one, read <a href=\"https://metamask.zendesk.com/hc/en-us/articles/360015489331-How-to-import-an-Account\">\r\n                            this</a> to import your account.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card my-4\">\r\n                <div class=\"card-header text-left\">\r\n                    <h2>Ropsten testnet</h2>\r\n                </div>\r\n                <div class=\"card-body text-justify\">\r\n                    <div class=\"card-text\">\r\n                        <p>\r\n                            At present, Rosetta on Chain only supports Ropsten testnet, a blockchain network for \r\n                            testing blockchain applications. For detail about the network, \r\n                            visit <a href=\"https://karl.tech/intro-guide-to-ethereum-testnets/\">here</a>. Make sure you \r\n                            have switched to the testnet on your wallet before using Rosetta on Chain.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card my-4\">\r\n                <div class=\"card-header text-left\">\r\n                    <h2>Getting Token</h2>\r\n                </div>\r\n                <div class=\"card-body text-justify\">\r\n                    <div class=\"card-text\">\r\n                        <p>\r\n                            Before you can make a post on Rosetta on Chain, you must have some tokens to make \r\n                            transactions. To obtain tokens on Ropsten testnet, \r\n                            follow <a href=\"https://support.mycrypto.com/how-to/getting-started/where-to-get-testnet-ether\">\r\n                            these instructions</a> to get some from faucets. \r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wallet;","import React from \"react\"\r\n\r\nconst MainFunc = () => {\r\n    return (\r\n        <div>\r\n            <p>\r\n                Rosetta looks like a typical social network and is easy to use. Below are some brief \r\n                descriptions of the main functions available at the moment.\r\n            </p>\r\n            <div class=\"card my-4\">\r\n                <div class=\"card-header text-left\">\r\n                    <h2>Homepage</h2>\r\n                </div>\r\n                <div class=\"card-body text justify\">\r\n                    <div class=\"card-text\"></div>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header text-left\">\r\n                            <h3>Viewing posts</h3>\r\n                        </div>\r\n                        <div class=\"card-body text-justify\">\r\n                            <div class=\"card-text\">\r\n                                <p>\r\n                                    By default, Rosetta on Chain shows all the posts made by every user. It is to \r\n                                    maximize the opportunity of all messages to reach the public. In a later \r\n                                    version, a focus mode will be introduced to only view followed users' content.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header text-left\">\r\n                            <h3>Writing posts</h3>\r\n                        </div>\r\n                        <div class=\"card-body text-justify\">\r\n                            <div class=\"card-text\">\r\n                                <p>\r\n                                    Because of the high storage cost of blockchains, the app only supports textual \r\n                                    content at the moment. Whenever you create a post, you must confirm transaction \r\n                                    from your blockchain wallet as uploading content counts as transactions to the \r\n                                    blockchain. No additional cost will be incurred except the transaction fee paid \r\n                                    to the miners.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card my-4\">\r\n                <div class=\"card-header text-left\">\r\n                    <h2>Profile</h2>\r\n                </div>\r\n                <div class=\"card-body text justify\">\r\n                    <div class=\"card-text\">\r\n                        <p>\r\n                            The app provides personal profile view where you may read all the content a user has uploaded.\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header text-left\">\r\n                            <h3>Viewing your profile</h3>\r\n                        </div>\r\n                        <div class=\"card-body text-justify\">\r\n                            <div class=\"card-text\">\r\n                                <p>\r\n                                    To access your profile, click on the \"profile\" button on the navigation bar. \r\n                                    The app will show you the profile of the selected account on your wallet.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-header text-left\">\r\n                            <h3>Viewing others profile</h3>\r\n                        </div>\r\n                        <div class=\"card-body text-justify\">\r\n                            <div class=\"card-text\">\r\n                                <p>\r\n                                    To view others' profile, click on the username on the posts on your homepage.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainFunc;","import React from \"react\"\r\n\r\nconst CreatePosts = () => {\r\n    return (\r\n        <div>\r\n            <div class=\"card my-4\">\r\n                <div class=\"card-header text-left\">\r\n                    <h2>Transaction confirmation</h2>\r\n                </div>\r\n                <div class=\"card-body text-justify\">\r\n                    <p>\r\n                        To successfully upload a post, you must confirm a transaction from your wallet application. \r\n                        This is to make a request to the blockchain to process your content upload. A toll will be \r\n                        taken by the miners on the blockchain in order to handle your request.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card my-4\">\r\n                <div class=\"card-header text-left\">\r\n                    <h2>Waiting for handling</h2>\r\n                </div>\r\n                <div class=\"card-body text-justify\">\r\n                    <p>\r\n                        Unlike traditional social networks where making posts are almost instant, blockchain \r\n                        networks take a relatively long time to handle any request. It could take a few minutes \r\n                        before your message is broadcasted. With wallets like Metamask, you may check your \r\n                        transaction status or speed it up by paying an extra toll.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePosts;","import React, { useState } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport WarningMessage from '../WarningMessage/WarningMessage';\r\nimport Detail from './Detail';\r\nimport MasterList from './MasterList';\r\nimport Wallet from './Detail/Wallet';\r\nimport MainFunc from './Detail/MainFunc';\r\nimport CreatePosts from './Detail/CreatePosts';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nconst GetStarted = () => {\r\n\tconst sections = [\r\n\t\t{id: 1,\r\n\t\ttitle: \"Connect to your Blockchain wallet\",\r\n\t\tcontent: Wallet,},\r\n\t\t{id: 2,\r\n\t\ttitle: \"Main Functions\",\r\n\t\tcontent: MainFunc},\r\n\t\t{id: 3,\r\n\t\ttitle: \"Create posts\",\r\n\t\tcontent: CreatePosts},\r\n\t\t]\r\n\tconst [ currentSection, setCurrentSection ] = useState({});\r\n\tconst [ warningMessage, setWarningMessage ] = useState({ warningMessageOpen: false, warningMessageText: '' });\r\n\tconst sidebarStyle = classnames('col-2', 'p-0', 'border-right', styles.sidebar);\r\n\r\n\tconst closeWarningMessage = () => {\r\n\t\tsetWarningMessage({ warningMessageOpen: false, warningMessageText: '' });\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetCurrentSection(sections[0]);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<main id=\"mainContent\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className={sidebarStyle}>\r\n\t\t\t\t\t\t<div className=\"list-group list-group-flush border-bottom\">\r\n\t\t\t\t\t\t\t{sections.map((section) => (\r\n\t\t\t\t\t\t\t\t<MasterList\r\n\t\t\t\t\t\t\t\t\tselectSection={setCurrentSection}\r\n\t\t\t\t\t\t\t\t\tsection={section}\r\n\t\t\t\t\t\t\t\t\tkey={section.id}\r\n\t\t\t\t\t\t\t\t\tisActive={section === currentSection}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{currentSection.id && <Detail section={currentSection} />}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<WarningMessage\r\n\t\t\t\topen={warningMessage.warningMessageOpen}\r\n\t\t\t\ttext={warningMessage.warningMessageText}\r\n\t\t\t\tonWarningClose={closeWarningMessage}\r\n\t\t\t/>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default GetStarted;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport Footer from './components/Footer/Footer';\r\nimport Landing from './components/Landing/Landing';\r\nimport Home from './components/Home/Home';\r\nimport Profile from './components/Profile/Profile';\r\nimport GetStarted from './components/GetStarted/GetStarted';\r\n\r\n//TODO Web Template Studio: Add routes for your new pages here.\r\nclass App extends React.Component {\r\n\tstate = { loading: true, drizzleState: null };\r\n\r\n\tcomponentDidMount () {\r\n\t\tconst { drizzle } = this.props;\r\n\r\n\t\t// subscribe to changes in the store\r\n\t\tthis.unsubscribe = drizzle.store.subscribe(() => {\r\n\t\t\t// every time the store updates, grab the state from drizzle\r\n\t\t\tconst drizzleState = drizzle.store.getState();\r\n\r\n\t\t\t// check to see if it's ready, if so, update local component state\r\n\t\t\tif (drizzleState.drizzleStatus.initialized) {\r\n\t\t\t\tthis.setState({ loading: false, drizzleState });\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount () {\r\n\t\tthis.unsubscribe();\r\n\t}\r\n\r\n\trender () {\r\n\t\tif (this.state.loading) return 'Loading Drizzle...';\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/\" component={Landing} />\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/Home\"\r\n\t\t\t\t\t\trender={(props) => <Home drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath={[\"/Profile/:uid\", \"/Profile\"]}\r\n\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t<Profile {...props} drizzle={this.props.drizzle} drizzleState={this.state.drizzleState} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route path=\"/GetStarted\" component={GetStarted} />\r\n\t\t\t\t</Switch>\r\n\t\t\t\t<Footer />\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// Smart contract interaction\r\nimport { Drizzle } from \"@drizzle/store\";\r\nimport Postwall from \"./Postwall.json\"\r\n\r\n// initiate Drizzle\r\nconst drizzleOptions = { contracts: [Postwall] };\r\nconst drizzle = new Drizzle(drizzleOptions);\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n      <App drizzle={drizzle}/>\r\n    </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n/**  \r\n * Be aware that the website will only update to the latest version on the 2nd page visit if it as already cached \r\n * Learn more about service workers in React: https://create-react-app.dev/docs/making-a-progressive-web-app\r\n */\r\nregisterServiceWorker();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles_sidebar__FCp_l\",\"sidebarText\":\"styles_sidebarText__kICyq\",\"title\":\"styles_title__1A4wg\",\"heading\":\"styles_heading__3_El3\"};"],"sourceRoot":""}